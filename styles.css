:root { --headerH: 80px; --maxW: 1100px; --cardRadius: 16px; --cardPad: 32px; --gap: 24px; --ink: #0b0b0b; --muted: #6b7280; --line: #e5e7eb; --bgSubtle: #f8fafc; --introDelay: .5s; --neon: #22d3ee; }
* { box-sizing: border-box; }
html, body { height: 100%; }
body { font-family: Arial, Helvetica, sans-serif; margin: 0; background: #fff; color: var(--ink); }

/* ===== Header ===== */
header { position: fixed; top: 0; left: 0; right: 0; height: var(--headerH); display: flex; justify-content: center; align-items: center; padding: 0 20px; background: white; z-index: 100; border-bottom: 1px solid var(--line); }
nav ul { list-style: none; display: flex; gap: 20px; margin: 0; padding: 0; }
nav a { text-decoration: none; color: var(--ink); text-transform: capitalize; padding: 8px 14px; border-radius: 999px; line-height: 1; position: relative; transition: background-color .2s ease, outline-color .2s ease, color .2s ease; }
nav a.active { outline: 2px solid var(--ink); outline-offset: 2px; background: var(--bgSubtle); }
nav a:focus-visible { outline: 2px solid var(--ink); outline-offset: 2px; border-radius: 999px; }

/* ===== Main / Shared ===== */
main { padding-top: var(--headerH); }
.page { display: none; }
.page.active { display: block; }

/* ===== Hero / Home page ===== */
#intro { min-height: calc(100vh - var(--headerH)); display: flex; align-items: center; }
.centered-container { width: min(var(--maxW), 92%); margin: 0 auto; display: flex; align-items: center; justify-content: center; gap: 40px; text-align: center; }
.intro-text { flex: 1; color: #777; font-size: 1.3rem; text-align: center; margin: 0 auto; opacity: 0; transform: translateY(8px); transition: opacity 1.4s ease .25s, transform 1.4s ease .25s; }
.intro-text.show { opacity: 1; transform: none; }
#intro h1 { font-size: clamp(36px, 6vw, 64px); margin: 0; line-height: 1.05; color: var(--ink); }
#subtitle { color: var(--muted); font-size: 1.1rem; margin-top: 12px; line-height: 1.7; min-height: 1.7em; }
#roleText { display: inline-block; min-width: 17ch; }
/* Hero two-line typing */
/* Keep the whole block centered and full width */
.intro-lines {
    display: grid;
    gap: 8px;
    justify-items: center;
    width: 100%;
    text-align: center;
  }
  
  /* Each line sizes to its text but is centered; caret is positioned relative to it */
  .intro-line {
    position: relative;
    display: inline-block;
  }
  
  .intro-line.small {
    font-size: clamp(14px, 1.4vw, 18px);
    color: #6b7280;
    letter-spacing: .03em;
  }
  
  .intro-line.big {
    font-size: clamp(48px, 10vw, 120px);
    font-weight: 800;
    line-height: .95;
  }
  
  /* Gradient text remains the same */
  .gradient {
    background-image: linear-gradient(90deg, #06b6d4, #2563eb, #8b5cf6);
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
  }
  
  /* Carets: remove them from flow so they don't shift centering */
  .caret, .caret-big {
    position: absolute;
    left: 100%;
    margin-left: 6px;
    border-right: 2px solid #000;
    width: 1ch;
    animation: blink .9s steps(1,end) infinite;
  }
  
  .caret-big { border-right-width: 4px; height: 1em; vertical-align: -0.08em; }  
  .intro-line.big .caret { opacity: 0; }
  .intro-line.big.typing .caret { opacity: 1; }
/* ===== Sections ===== */
section.anchor { scroll-margin-top: var(--headerH); }
.section-inner { width: min(var(--maxW), 92%); margin: 0 auto; padding: 56px 0; text-align: left; }
.section-inner h2 { margin: 0 0 8px 0; font-size: 28px; letter-spacing: .02em; }
.section-inner p { margin: 0; color: var(--muted); line-height: 1.7; }

/* ===== Projects: Pinned, vertical carousel ===== */
#projects { background: var(--bgSubtle); padding: 0; }
.projects-pin { position: relative; }
.pinner { position: sticky; top: var(--headerH); height: calc(100vh - var(--headerH)); display: grid; grid-template-rows: auto 1fr; gap: 14px; align-content: center; padding: 18px 0; overscroll-behavior-block: contain; }
body.no-scroll { overflow: hidden; }
.pinner > .section-head { width: min(var(--maxW), 92%); margin: 0 auto; }
.carousel { position: relative; width: min(var(--maxW), 92%); margin: 0 auto; height: 100%; overflow: hidden; border-radius: var(--cardRadius); }
.track { display: flex; flex-direction: column; height: 100%; transition: transform 1.5s ease; will-change: transform; }
.slide { min-height: 100%; padding: clamp(12px, 2vw, 20px); display: grid; }

.project-card { align-self: center; background: #fff; color: var(--ink); border: 1px solid var(--line); border-radius: var(--cardRadius); padding: clamp(20px, 3vw, var(--cardPad)); display: grid; grid-template-columns: 1.1fr .9fr; gap: var(--gap); align-items: stretch; box-shadow: 0 20px 40px rgba(2,6,23,.06); }
.project-header { display: grid; grid-template-rows: auto auto 1fr auto; gap: 12px; }
.project-header h3 { margin: 0; font-size: clamp(18px, 2.2vw, 24px); letter-spacing: .01em; }
.project-desc { color: #374151; line-height: 1.7; }
.tags { display: flex; flex-wrap: wrap; gap: 8px; margin-top: 2px; }
.tag { font-size: .9rem; padding: 6px 10px; border-radius: 999px; border: 1px solid var(--line); color: #374151; background: #f9fafb; }
.divider { height: 1px; background: var(--line); margin: 6px 0 2px; }
.bullets { margin: 0; padding-left: 18px; color: #111827; }
.bullets li { margin: 6px 0; line-height: 1.6; }
.project-media { border: 1px dashed var(--line); background: #fff; border-radius: 12px; display: grid; place-items: center; min-height: 260px; }
.project-media span { opacity: .6; font-size: 13px; letter-spacing: .08em; text-transform: uppercase; }
footer { display: none; }

@keyframes blink { 50% { border-color: transparent; } }
@media (prefers-reduced-motion: reduce) {
  .intro-overlay { display: none !important; }
  .intro-text { opacity: 1 !important; transform: none !important; }
  .cursor-aura { display: none !important; }
}

@media (max-width: 1000px) { .project-card { grid-template-columns: 1fr; } .project-media { min-height: 200px; } }
@media (max-width: 900px) { .centered-container { width: 92%; flex-direction: column; text-align: center; gap: 24px; } #intro h1 { white-space: normal; } }
@media (max-width: 600px) { #subtitle { font-size: 1rem; } .slide { padding: 12px; } }

/* ===== Key-only Intro Overlay (centered, no jump) ===== */
.intro-overlay{
    position:fixed; inset:0; background:#000;
    display:grid; place-items:center; z-index:9999; overflow:hidden;
  }
  .intro-overlay > *{ grid-area:1 / 1; }

  /* hide the overlay after the wipe finishes */
.intro-overlay.hidden {
    display: none !important;
  }
  
  /* key wrapper */
  .intro-overlay .sq-wrap{
    display:grid; place-items:center; cursor:pointer; outline:none;
    z-index:2; transform:translateY(0);
  }
  .intro-overlay .sq-wrap:focus-visible{ outline:2px solid #fff; outline-offset:4px; }
  
  /* keep it from *ever* moving vertically */
  .intro-overlay .sq-wrap,
  .intro-overlay .sq-wrap.lift{ transform:translateY(0) !important; }
  
  /* square + keyhole */
  .intro-overlay .square{
    width:44px; height:44px; background:#fff; border-radius:10px;
    display:grid; place-items:center; position:relative;
  }
  .intro-overlay .square::before{
    content:""; position:absolute; inset:-12px; border-radius:14px; z-index:-1;
    background:radial-gradient(50% 50% at 50% 50%, rgba(34,211,238,.35) 0%, rgba(34,211,238,0) 65%);
    filter:blur(6px);
  }
  .intro-overlay .square::after{
    content:""; position:absolute; left:50%; bottom:-8px; width:66px; height:16px;
    transform:translateX(-50%); filter:blur(0.6px);
    background:radial-gradient(50% 50% at 50% 50%, rgba(34,211,238,.45) 0%, rgba(34,211,238,0) 60%);
    opacity:.6;
  }
  .intro-overlay .square .keyhole{
    position:relative; width:18px; height:28px; display:block; transform-origin:50% 50%;
  }
  .intro-overlay .square .keyhole::before{
    content:""; position:absolute; left:50%; top:0; width:14px; height:14px; background:#000; border-radius:50%; transform:translateX(-50%);
  }
  .intro-overlay .square .keyhole::after{
    content:""; position:absolute; left:50%; top:14px; width:8px; height:12px; background:#000; transform:translateX(-50%); border-radius:2px;
  }
  
  /* spin only the square/key */
  .intro-overlay .square.spin{ animation:spin360 .9s cubic-bezier(.2,.8,.2,1) forwards; }
  .intro-overlay .square .keyhole.spin{ animation:counterSpin .9s cubic-bezier(.2,.8,.2,1) forwards; }
  
  /* fade-only lift (no movement) */
  .intro-overlay .sq-wrap.lift{ animation:exitUp .7s cubic-bezier(.16,1,.3,1) forwards; }
  
  .intro-overlay .white-wipe{
    position:absolute; inset:0; background:#fff; z-index:3;
    transform: translateY(100%);
    transition: transform .7s cubic-bezier(.16,1,.3,1);
  }
  .intro-overlay.revealing .white-wipe{
    transform: translateY(0%);
  }
  
  
  /* spins */
  @keyframes spin360{ from{transform:rotate(0deg);} to{transform:rotate(360deg);} }
  @keyframes counterSpin{ from{transform:rotate(0deg);} to{transform:rotate(-360deg);} }
  

  /* make sure the key wrapper is the centered grid item */
.intro-overlay { display: grid; place-items: center; }
.intro-overlay .sq-wrap { grid-area: 1 / 1; }

/* when JS adds .lift, run an animation so the 'animationstart' listener fires */
.intro-overlay .sq-wrap.lift {
    animation: exitUp .7s cubic-bezier(0.16,1,0.3,1) forwards;
  }
  
  /* OPTION A: keep the original move-up behavior
  @keyframes exitUp {
    from { transform: translateY(0); }
    to   { transform: translateY(-120vh); }
  }
  */
  
  /* OPTION B (recommended): don't move, just fade the key out but keep the same name
     — this still triggers your JS and avoids the jump you noticed */

/* === Aurora text for #nameLine === */
:root{
    /* tweak these */
    --aurora-speed: 5.5s;      /* smaller = faster color change */
    --aurora-intensity: 0.40;  /* 0.30–0.55 looks good on white */
  }
  
  /* animated, multi-layer gradient clipped into text */
  .aurora-text{
    background:
      linear-gradient(120deg, #ff4d67, #ffd166, #06d6a0, #118ab2, #a855f7),
      linear-gradient(300deg,
        rgba(255,198,64,var(--aurora-intensity)),
        rgba(229,76,255,var(--aurora-intensity))),
      linear-gradient( 30deg,
        rgba(51,255,140,var(--aurora-intensity)),
        rgba(0,194,255,var(--aurora-intensity)));
    background-size: 300% 300%, 220% 220%, 220% 220%;
    background-position: 0% 50%, 100% 50%, 50% 0%;
  
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
  
    /* motion + subtle hue drift (no white introduced) */
    animation:
      auroraMove var(--aurora-speed) ease-in-out infinite alternate,
      hueCycle  calc(var(--aurora-speed) * 1.6) linear infinite;
  
    /* tuned for light page background */
    filter: saturate(1.15) contrast(1.05) hue-rotate(var(--hue,0deg));
  }
  
  /* only animate once the big line is revealed */
  .intro-line.big:not(.show) .aurora-text { animation-play-state: paused; }
  .intro-line.big.show .aurora-text       { animation-play-state: running; }
  
  /* smooth fade for the name (keep if not already present) */
  :root { --name-fade-dur: 1.2s; }
  #nameLine{
    display:inline-block;
    opacity:0;
    transform:translateY(6px);
    transition:
      opacity var(--name-fade-dur) cubic-bezier(.2,.7,0,1),
      transform var(--name-fade-dur) cubic-bezier(.2,.7,0,1);
  }
  .intro-line.big.show #nameLine{ opacity:1; transform:none; }
  /* stack everything so the key doesn’t shift when the wipe appears */
.intro-overlay > * { grid-area: 1 / 1; }

/* Stack the lock and the decode text vertically */
.intro-overlay .sq-wrap{
    display: flex;              /* override previous grid */
    flex-direction: column;
    align-items: center;
    gap: 12px;
  }
  
  /* The decoding word */
/* reserve space + hide until click */
.decode-text{
    font: 700 14px ui-monospace, SFMono-Regular, Menlo, Consolas, "Liberation Mono", monospace;
    letter-spacing: .32em;
    color: #fff;
    text-transform: uppercase;
    opacity: .9;
  
    /* key bits */
    min-height: 1.2em;   /* reserves one line height so layout doesn't jump */
    visibility: hidden;  /* hidden but still takes up space */
  }
  
  /* Canvas fills the viewport behind everything */
  #musicViz{
    position: fixed;
    inset: 0;
    z-index: 0;           /* behind content */
    pointer-events: none; /* don’t block clicks */
    opacity: .18;
    filter: blur(0.3px);
  }
  
  
  /* Little play/pause chip centered near bottom */
  .audio-chip{
    position: fixed;
    left: 50%;
    bottom: clamp(20px, 4vh, 36px);
    transform: translateX(-50%);
    z-index: 5;              /* above main content */
  }
  
  #audioToggle{
    appearance: none;
    border: 1px solid var(--line);
    background: #fff;
    color: var(--ink);
    padding: 10px 14px;
    border-radius: 999px;
    font: 600 14px/1 system-ui, -apple-system, Segoe UI, Roboto, sans-serif;
    box-shadow: 0 10px 20px rgba(2,6,23,.06);
    transition: box-shadow .2s ease, transform .15s ease;
  }
  #audioToggle:hover{ box-shadow: 0 12px 28px rgba(2,6,23,.10); }
  #audioToggle:active{ transform: translateY(1px); }
  #audioToggle[aria-pressed="true"]{ background: #111827; color: #fff; border-color: transparent; }
  
  /* Respect reduced-motion */
  @media (prefers-reduced-motion: reduce){
    #musicViz{ display:none !important; }
  }
  
/* fade-only lift — no vertical movement */
.intro-overlay .sq-wrap.lift { animation: exitUp .7s cubic-bezier(.16,1,.3,1) forwards; }
@keyframes exitUp { from { opacity:1; transform:translateY(0); } to { opacity:0; transform:translateY(0); } }

/* the wipe covers the whole overlay when revealing */
.intro-overlay .white-wipe { position:absolute; inset:0; background:#fff; transform:translateY(100%); z-index:3; }
.intro-overlay.revealing .white-wipe { transition: transform .7s cubic-bezier(.16,1,.3,1); transform: translateY(0%); }

  /* animations */
  @keyframes auroraMove{
    0%   { background-position:   0% 50%, 100% 50%, 50%   0%; }
    50%  { background-position:  60% 40%,   0% 60%,  60% 100%; }
    100% { background-position: 100% 50%,  40%  0%,   0%  50%; }
  }
  
  /* custom prop for hue drift (supported in modern browsers) */
  @property --hue { syntax: '<angle>'; inherits: false; initial-value: 0deg; }
  @keyframes hueCycle { to { --hue: 360deg; } }

  /* @keyframes exitUp {
    from { transform: translateY(0); opacity: 1; }
    to   { transform: translateY(0); opacity: 0; }
  } */
  