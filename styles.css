:root { --headerH: 80px; --maxW: 1100px; --cardRadius: 16px; --cardPad: 32px; --gap: 24px; --ink: #0b0b0b; --muted: #6b7280; --line: #e5e7eb; --bgSubtle: #f8fafc; --introDelay: .5s; --accent: #374151; }
* { box-sizing: border-box; }
html, body { height: 100%; }
body { font-family: Arial, Helvetica, sans-serif; margin: 0; background: #fff; color: var(--ink); }

/* ===== Header ===== */
header { position: fixed; top: 0; left: 0; right: 0; height: var(--headerH); display: flex; justify-content: center; align-items: center; padding: 0 20px; background: white; z-index: 100; border-bottom: 1px solid var(--line); }
nav { position: relative; display: flex; align-items: center; }
nav ul { list-style: none; display: flex; gap: 20px; margin: 0; padding: 0; }
nav a { text-decoration: none; color: var(--ink); text-transform: capitalize; padding: 8px 14px; border-radius: 999px; line-height: 1; position: relative; transition: background-color .2s ease, outline-color .2s ease, color .2s ease; }
nav a.active { outline: 2px solid var(--ink); outline-offset: 2px; background: var(--bgSubtle); }
nav a:focus-visible { outline: 2px solid var(--ink); outline-offset: 2px; border-radius: 3px; }

.nav-music-circle {
  position: fixed;
  right: 20px;
  top: 20px;
  width: 50px;
  height: 50px;
  opacity: 0;
  transition: opacity 0.3s ease;
  z-index: 10;
}

.nav-music-circle.show {
  opacity: 1;
}

/* ===== Main / Shared ===== */
main { padding-top: var(--headerH); }
.page { display: none; }
.page.active { display: block; }

/* ===== Hero / Home page ===== */
#intro { min-height: calc(100vh - var(--headerH)); display: flex; align-items: center; }
.centered-container { width: min(var(--maxW), 92%); margin: 0 auto; display: flex; align-items: center; justify-content: center; gap: 40px; text-align: center; }
.intro-text { flex: 1; color: #777; font-size: 1.3rem; text-align: center; margin: 0 auto; opacity: 0; transform: translateY(8px); transition: opacity 1.4s ease .25s, transform 1.4s ease .25s; }
.intro-text.show { opacity: 1; transform: none; }
#intro h1 { font-size: clamp(36px, 6vw, 64px); margin: 0; line-height: 1.05; color: var(--ink); }
#subtitle { color: var(--muted); font-size: 1.1rem; margin-top: 12px; line-height: 1.7; min-height: 1.7em; }
#roleText { display: inline-block; min-width: 17ch; }
/* Hero two-line typing */
/* Keep the whole block centered and full width */
.intro-lines {
    display: grid;
    gap: 8px;
    justify-items: center;
    width: 100%;
    text-align: center;
  }
  
  /* Each line sizes to its text but is centered; caret is positioned relative to it */
  .intro-line {
    position: relative;
    display: inline-block;
  }
  
  .intro-line.small {
    font-size: clamp(14px, 1.4vw, 18px);
    color: #6b7280;
    letter-spacing: .03em;
  }
  
  .intro-line.big {
    font-size: clamp(48px, 10vw, 120px);
    font-weight: 800;
    line-height: .95;
  }
  
  /* Gradient text remains the same */
  .gradient {
    background-image: linear-gradient(90deg, #374151, #6b7280, #9ca3af);
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
  }
  
  /* Carets: remove them from flow so they don't shift centering */
  .caret, .caret-big {
    position: absolute;
    left: 100%;
    margin-left: 6px;
    border-right: 2px solid #000;
    width: 1ch;
    animation: blink .9s steps(1,end) infinite;
  }
  
  .caret-big { border-right-width: 4px; height: 1em; vertical-align: -0.08em; }  
  .intro-line.big .caret { opacity: 0; }
  .intro-line.big.typing .caret { opacity: 1; }
/* ===== Sections ===== */
section.anchor { scroll-margin-top: var(--headerH); }
.section-inner { width: min(var(--maxW), 92%); margin: 0 auto; padding: 56px 0; text-align: left; }
.section-inner h2 { margin: 0 0 8px 0; font-size: 28px; letter-spacing: .02em; }
.section-inner p { margin: 0; color: var(--muted); line-height: 1.7; }

/* ===== Projects: Grid layout with hover expansion ===== */
#projects { background: var(--bgSubtle); padding: 0; height: calc(100vh - var(--headerH)); }
.projects-grid-container { width: min(var(--maxW), 92%); margin: 0 auto; padding: 60px 0; }

.projects-grid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-template-rows: repeat(2, 1fr);
  gap: 16px;
  height: calc(100vh - var(--headerH) - 120px);
  position: relative;
  max-width: 900px;
  margin: 0 auto;
}

.project-item {
  position: relative;
  overflow: hidden;
  border-radius: var(--cardRadius);
  transition: all 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  cursor: pointer;
  animation: fadeInUp 0.6s ease-out forwards;
  opacity: 0;
  transform: translateY(20px);
  will-change: transform, z-index;
}

/* Hover effects for clickable feedback */
.project-item:hover:not(.expanded) {
  transform: translateY(20px) scale(1.02);
  box-shadow: 0 15px 30px rgba(2,6,23,0.1);
}

.project-item:nth-child(1) { animation-delay: 0.1s; }
.project-item:nth-child(2) { animation-delay: 0.2s; }
.project-item:nth-child(3) { animation-delay: 0.3s; }
.project-item:nth-child(4) { animation-delay: 0.4s; }

@keyframes fadeInUp {
  to {
    opacity: 1;
    transform: translateY(0);
  }
}



.project-item {
  transition: all 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

.project-item.expanded {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 20;
  transform: none;
  box-shadow: 0 40px 80px rgba(2,6,23,0.15);
}

.project-item.expanded .project-card {
  height: 100%;
  transform: none;
}

.projects-grid.has-expanded .project-item:not(.expanded) {
  opacity: 0.3;
  transform: scale(0.8);
  transition: all 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

/* Transition is now handled above */

.project-item.expanded .project-header h3 {
  color: var(--accent);
  font-size: clamp(24px, 3vw, 32px);
}



.project-item.expanded .project-desc {
  color: var(--ink);
  font-size: 1.1rem;
}

.project-item.expanded .project-media {
  min-height: 200px;
  max-height: 300px;
}

.project-card {
  height: 100%;
  background: #fff;
  color: var(--ink);
  border: 1px solid var(--line);
  border-radius: var(--cardRadius);
  padding: clamp(20px, 3vw, var(--cardPad));
  display: grid;
  grid-template-columns: 1fr;
  gap: 20px;
  align-items: start;
  box-shadow: 0 20px 40px rgba(2,6,23,.06);
  transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  overflow: hidden;
}

.project-header {
  display: grid;
  grid-template-rows: auto auto auto 1fr auto;
  gap: 12px;
  height: 100%;
}

.project-header h3 {
  margin: 0;
  font-size: clamp(18px, 2.2vw, 24px);
  letter-spacing: .01em;
  color: var(--ink);
  font-weight: 600;
}

.project-desc {
  color: #374151;
  line-height: 1.6;
  font-size: 0.95rem;
  margin: 0;
}

.tags {
  display: flex;
  flex-wrap: wrap;
  gap: 8px;
  margin-top: 2px;
}

.tag {
  font-size: 0.8rem;
  padding: 4px 8px;
  border-radius: 999px;
  border: 1px solid var(--line);
  color: #374151;
  background: #f9fafb;
  font-weight: 500;
}

.divider {
  height: 1px;
  background: var(--line);
  margin: 6px 0 2px;
  opacity: 0.6;
}

.bullets {
  margin: 0;
  padding-left: 18px;
  color: #111827;
  font-size: 0.9rem;
}

.bullets li {
  margin: 6px 0;
  line-height: 1.5;
}

.project-media {
  border: 1px dashed var(--line);
  background: #fff;
  border-radius: 12px;
  display: none;
  place-items: center;
  min-height: 120px;
  max-height: 150px;
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
}

.project-item.expanded .project-media {
  display: grid;
}

.project-media::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(55, 65, 81, 0.1), transparent);
  transition: left 0.5s ease;
}

.project-item:hover .project-media::before {
  left: 100%;
}

.project-media span {
  opacity: .6;
  font-size: 13px;
  letter-spacing: .08em;
  text-transform: uppercase;
  color: var(--muted);
}

/* Hover effects for project items */
.project-item:hover .project-media {
  border-color: var(--accent);
  background: var(--bgSubtle);
}

.project-item:hover .tag {
  border-color: var(--accent);
  background: var(--accent);
  color: white;
}

/* Responsive design for projects grid */
@media (max-width: 1000px) {
  .projects-grid {
    grid-template-columns: 1fr;
    grid-template-rows: repeat(4, auto);
    height: auto;
    min-height: auto;
    gap: 20px;
  }
  
  .project-item.expanded {
    position: relative;
    width: auto;
    height: auto;
    transform: scale(1.02);
  }
  
  .project-item.expanded .project-card {
    transform: scale(1.01);
  }
  
  .projects-grid.has-expanded .project-item:not(.expanded) {
    opacity: 0.7;
    transform: scale(0.98);
  }
}

@media (max-width: 768px) {
  .projects-grid-container {
    padding: 40px 0;
  }
  
  .project-card {
    padding: 20px;
  }
}

/* ===== About Page ===== */
.about-content {
  display: grid;
  grid-template-columns: 2fr 1fr;
  gap: 60px;
  align-items: start;
}

.about-text p {
  margin: 0 0 24px 0;
  color: var(--ink);
  line-height: 1.7;
  font-size: 1.1rem;
}

.about-highlights {
  display: grid;
  gap: 24px;
}

.highlight-item {
  background: var(--bgSubtle);
  padding: 24px;
  border-radius: var(--cardRadius);
  border: 1px solid var(--line);
}

.highlight-item h3 {
  margin: 0 0 12px 0;
  color: var(--ink);
  font-size: 1.2rem;
}

.highlight-item p {
  margin: 0;
  color: var(--muted);
  line-height: 1.6;
}

.contact-section {
  margin-top: 60px;
  padding-top: 40px;
  border-top: 1px solid var(--line);
}

.contact-section h3 {
  margin: 0 0 20px 0;
  color: var(--ink);
  font-size: 1.4rem;
  font-weight: 600;
}

.contact-section p {
  margin: 0 0 32px 0;
  color: var(--muted);
  line-height: 1.6;
  font-size: 1.1rem;
}

.contact-methods {
  display: grid;
  gap: 24px;
}

.contact-method {
  display: flex;
  align-items: center;
  gap: 16px;
  padding: 20px;
  background: var(--bgSubtle);
  border-radius: var(--cardRadius);
  border: 1px solid var(--line);
}

.contact-icon {
  font-size: 1.5rem;
}

.contact-method h4 {
  margin: 0 0 4px 0;
  color: var(--ink);
  font-size: 1rem;
}

.contact-method a {
  color: var(--accent);
  text-decoration: none;
  font-weight: 500;
}

.contact-method a:hover {
  text-decoration: underline;
}

/* ===== Experience Page ===== */
.experience-page {
  height: calc(100vh - var(--headerH));
  overflow: hidden;
}



.experience-content {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 80px;
  max-width: 1000px;
  margin: 0 auto;
  height: calc(100vh - var(--headerH) - 40px);
  padding-top: 20px;
}

.experience-section,
.skills-section {
  height: calc(100vh - var(--headerH) - 80px);
  overflow-y: auto;
  padding-right: 20px; /* Space for scrollbar */
  scrollbar-width: thin;
  scrollbar-color: var(--line) transparent;
  min-height: 0; /* Allow sections to shrink and scroll */
}

.experience-section::-webkit-scrollbar,
.skills-section::-webkit-scrollbar {
  width: 8px;
}

.experience-section::-webkit-scrollbar-track,
.skills-section::-webkit-scrollbar-track {
  background: transparent;
}

.experience-section::-webkit-scrollbar-thumb,
.skills-section::-webkit-scrollbar-thumb {
  background: var(--line);
  border-radius: 4px;
}

.experience-section::-webkit-scrollbar-thumb:hover,
.skills-section::-webkit-scrollbar-thumb:hover {
  background: var(--accent);
}

.experience-section h3,
.skills-section h3 {
  font-size: 1.5rem;
  color: var(--ink);
  margin: 0 0 32px 0;
  font-weight: 600;
  border-bottom: 2px solid var(--line);
  padding-bottom: 12px;
  position: sticky;
  top: 0;
  background: white;
  padding-top: 20px;
  padding-bottom: 20px;
  z-index: 10;
}

.job-card {
  background: white;
  padding: 32px;
  border-radius: 12px;
  border: 1px solid var(--line);
  margin-bottom: 24px;
  transition: all 0.3s ease;
  position: relative;
}

.job-card:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.08);
  border-color: var(--accent);
}



.job-header h4 {
  font-size: 1.3rem;
  color: var(--ink);
  margin: 0 0 8px 0;
  font-weight: 600;
}

.company {
  display: block;
  color: var(--accent);
  font-weight: 600;
  margin-bottom: 6px;
  font-size: 1rem;
}

.period {
  display: block;
  color: var(--muted);
  font-size: 0.9rem;
  margin-bottom: 4px;
}

.location {
  display: block;
  color: var(--muted);
  font-size: 0.85rem;
  font-style: italic;
}

.job-description {
  color: var(--muted);
  line-height: 1.6;
  margin: 16px 0 20px 0;
  font-size: 1rem;
}

.tech-stack {
  display: flex;
  flex-wrap: wrap;
  gap: 8px;
}

.tech-tag {
  background: var(--bgSubtle);
  color: var(--ink);
  padding: 6px 12px;
  border-radius: 16px;
  font-size: 0.85rem;
  border: 1px solid var(--line);
  font-weight: 500;
  transition: all 0.2s ease;
}

.tech-tag:hover {
  background: var(--accent);
  color: white;
  border-color: var(--accent);
}

.skill-category {
  margin-bottom: 32px;
}

.skill-category h4 {
  font-size: 1.1rem;
  color: var(--ink);
  margin: 0 0 16px 0;
  font-weight: 600;
}

.skill-items {
  display: flex;
  flex-wrap: wrap;
  gap: 8px;
}

.skill-item {
  background: var(--bgSubtle);
  color: var(--ink);
  padding: 8px 16px;
  border-radius: 20px;
  font-size: 0.9rem;
  border: 1px solid var(--line);
  font-weight: 500;
  transition: all 0.2s ease;
}

.skill-item:hover {
  background: var(--accent);
  color: white;
  border-color: var(--accent);
}

/* Add buffer space at the bottom of sections */
.experience-section .job-card:last-child {
  margin-bottom: 40px; /* Space for work experience section */
}

.skills-section .skill-category:last-child {
  margin-bottom: 40px; /* Space for skills section */
}

/* Responsive design */
@media (max-width: 768px) {
  .experience-page {
    min-height: auto;
    overflow: visible;
  }
  
  .experience-content {
    grid-template-columns: 1fr;
    gap: 40px;
    min-height: auto;
  }
  
  .experience-section,
  .skills-section {
    height: auto;
    overflow-y: visible;
    padding-right: 0;
    min-height: auto;
  }
  
  .experience-section h3,
  .skills-section h3 {
    position: static;
    background: transparent;
  }
  
  .experience-header h2 {
    font-size: 2rem;
  }
}

/* ===== Skills Page ===== */
.skills-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 40px;
}

.skill-category h3 {
  margin: 0 0 24px 0;
  color: var(--ink);
  font-size: 1.3rem;
}

.skill-items {
  display: grid;
  gap: 20px;
}

.skill-item {
  display: grid;
  grid-template-columns: 120px 1fr;
  gap: 20px;
  align-items: center;
}

.skill-name {
  font-weight: 600;
  color: var(--ink);
}

.skill-bar {
  height: 8px;
  background: var(--bgSubtle);
  border-radius: 4px;
  overflow: hidden;
  border: 1px solid var(--line);
}

.skill-fill {
  height: 100%;
  background: linear-gradient(90deg, var(--accent), #4b5563);
  border-radius: 4px;
  transition: width 0.8s ease;
}





/* ===== Responsive Design ===== */
@media (max-width: 768px) {
  .about-content {
    grid-template-columns: 1fr;
    gap: 40px;
  }
  

  
  .skills-grid {
    grid-template-columns: 1fr;
  }
  
  .skill-item {
    grid-template-columns: 1fr;
    gap: 12px;
  }
  
  .timeline-item {
    padding-left: 40px;
  }
  
  .timeline::before {
    left: 15px;
  }
  
  .timeline-marker {
    left: 6px;
  }
}
.project-media span { opacity: .6; font-size: 13px; letter-spacing: .08em; text-transform: uppercase; }
footer { display: none; }

@keyframes blink { 50% { border-color: transparent; } }
@media (prefers-reduced-motion: reduce) {
  .intro-overlay { display: none !important; }
  .intro-text { opacity: 1 !important; transform: none !important; }
  .cursor-aura { display: none !important; }
}

/* Old carousel styles removed - now using grid layout */
@media (max-width: 900px) { .centered-container { width: 92%; flex-direction: column; text-align: center; gap: 24px; } #intro h1 { white-space: normal; } }
@media (max-width: 600px) { #subtitle { font-size: 1rem; } }

/* ===== Key-only Intro Overlay (centered, no jump) ===== */
.intro-overlay{
    position:fixed; inset:0; background:#000;
    display:grid; place-items:center; z-index:9999; overflow:hidden;
  }
  .intro-overlay > *{ grid-area:1 / 1; }

  /* hide the overlay after the wipe finishes */
.intro-overlay.hidden {
    display: none !important;
  }
  
  /* key wrapper */
  .intro-overlay .sq-wrap{
    display:grid; place-items:center; cursor:pointer; outline:none;
    z-index:2; transform:translateY(0);
  }
  .intro-overlay .sq-wrap:focus-visible{ outline:2px solid #fff; outline-offset:4px; }
  
  /* keep it from *ever* moving vertically */
  .intro-overlay .sq-wrap,
  .intro-overlay .sq-wrap.lift{ transform:translateY(0) !important; }
  
  /* square + keyhole */
  .intro-overlay .square{
    width:44px; height:44px; background:#fff; border-radius:10px;
    display:grid; place-items:center; position:relative;
    animation: boxPulse 12s ease-in-out infinite;
    animation-play-state: running;
  }
  
  /* Pause animations when user is interacting */
  .intro-overlay .square:hover {
    animation-play-state: paused;
  }
  
  /* Stop all animations when spinning */
  .intro-overlay .square.spin {
    animation: spin360 .9s cubic-bezier(.2,.8,.2,1) forwards !important;
    animation-play-state: running !important;
  }
  .intro-overlay .square::before{
    content:""; position:absolute; inset:-12px; border-radius:14px; z-index:-1;
    background:radial-gradient(50% 50% at 50% 50%, rgba(55,65,81,.35) 0%, rgba(55,65,81,0) 65%);
    filter:blur(6px);
  }
  .intro-overlay .square::after{
    content:""; position:absolute; left:50%; bottom:-8px; width:66px; height:16px;
    transform:translateX(-50%); filter:blur(0.6px);
    background:radial-gradient(50% 50% at 50% 50%, rgba(55,65,81,.45) 0%, rgba(55,65,81,0) 60%);
    opacity:.6;
  }
  
  /* Ripple effects */
  .intro-overlay .square::before {
    content: "";
    position: absolute;
    inset: -12px;
    border-radius: 14px;
    z-index: -1;
    background: radial-gradient(50% 50% at 50% 50%, rgba(55,65,81,.35) 0%, rgba(55,65,81,0) 65%);
    filter: blur(6px);
    animation: ripplePulse 12s ease-in-out infinite;
    animation-play-state: running;
  }
  
  /* Pause ripple animations on hover */
  .intro-overlay .square:hover::before {
    animation-play-state: paused;
  }
  
  /* Additional ripple layers */
  .intro-overlay .square .ripple-1,
  .intro-overlay .square .ripple-2,
  .intro-overlay .square .ripple-3 {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 44px;
    height: 44px;
    border: 2px solid rgba(255, 255, 255, 0.3);
    border-radius: 10px;
    transform: translate(-50%, -50%);
    animation: rippleExpand 12s ease-in-out infinite;
    animation-play-state: running;
  }
  
  /* Pause ripple expand animations on hover */
  .intro-overlay .square:hover .ripple-1,
  .intro-overlay .square:hover .ripple-2,
  .intro-overlay .square:hover .ripple-3 {
    animation-play-state: paused;
  }
  
  .intro-overlay .square .ripple-1 {
    animation-delay: 0s;
  }
  
  .intro-overlay .square .ripple-2 {
    animation-delay: 4s;
  }
  
  .intro-overlay .square .ripple-3 {
    animation-delay: 8s;
  }
  .intro-overlay .square .keyhole{
    position:relative; width:18px; height:28px; display:block; transform-origin:50% 50%;
  }
  .intro-overlay .square .keyhole::before{
    content:""; position:absolute; left:50%; top:0; width:14px; height:14px; background:#000; border-radius:50%; transform:translateX(-50%);
  }
  .intro-overlay .square .keyhole::after{
    content:""; position:absolute; left:50%; top:14px; width:8px; height:12px; background:#000; transform:translateX(-50%); border-radius:2px;
  }
  
  /* spin only the square/key */
  .intro-overlay .square.spin{ animation:spin360 .9s cubic-bezier(.2,.8,.2,1) forwards; }
  .intro-overlay .square .keyhole.spin{ animation:counterSpin .9s cubic-bezier(.2,.8,.2,1) forwards; }
  
  /* enhanced hover effect for the entire square */
  .intro-overlay .square:hover {
    cursor: pointer;
    filter: brightness(1.1);
    transition: filter 0.3s ease;
  }
  
  /* Remove hover animation when spinning to avoid conflicts */
  .intro-overlay .square.spin {
    animation: spin360 .9s cubic-bezier(.2,.8,.2,1) forwards !important;
  }
  
  .intro-overlay .square.spin .keyhole {
    animation: counterSpin .9s cubic-bezier(.2,.8,.2,1) forwards !important;
  }
  
  /* fade-only lift (no movement) */
  .intro-overlay .sq-wrap.lift{ animation:exitUp .7s cubic-bezier(.16,1,.3,1) forwards; }
  
  .intro-overlay .white-wipe{
    position:absolute; inset:0; background:#fff; z-index:3;
    transform: translateY(100%);
    transition: transform .7s cubic-bezier(.16,1,.3,1);
  }
  .intro-overlay.revealing .white-wipe{
    transform: translateY(0%);
  }
  
  
  /* spins */
  @keyframes spin360{ from{transform:rotate(0deg);} to{transform:rotate(360deg);} }
  @keyframes counterSpin{ from{transform:rotate(0deg);} to{transform:rotate(-360deg);} }
  
  /* box pulsing animation */
  @keyframes boxPulse {
    0%, 100% { 
      transform: scale(1);
      box-shadow: 0 0 20px rgba(255, 255, 255, 0.3);
    }
    50% { 
      transform: scale(1.05);
      box-shadow: 0 0 40px rgba(255, 255, 255, 0.6);
    }
  }
  
  /* ripple pulse animation */
  @keyframes ripplePulse {
    0%, 100% { 
      transform: scale(1);
      opacity: 0.35;
    }
    50% { 
      transform: scale(1.1);
      opacity: 0.6;
    }
  }
  
  /* ripple expand animation */
  @keyframes rippleExpand {
    0% { 
      transform: translate(-50%, -50%) scale(1);
      opacity: 0.8;
    }
    100% { 
      transform: translate(-50%, -50%) scale(3);
      opacity: 0;
    }
  }
  

  /* make sure the key wrapper is the centered grid item */
.intro-overlay { display: grid; place-items: center; }
.intro-overlay .sq-wrap { grid-area: 1 / 1; }

/* when JS adds .lift, run an animation so the 'animationstart' listener fires */
.intro-overlay .sq-wrap.lift {
    animation: exitUp .7s cubic-bezier(0.16,1,0.3,1) forwards;
  }
  
  /* OPTION A: keep the original move-up behavior
  @keyframes exitUp {
    from { transform: translateY(0); }
    to   { transform: translateY(-120vh); }
  }
  */
  
  /* OPTION B (recommended): don't move, just fade the key out but keep the same name
     — this still triggers your JS and avoids the jump you noticed */

.tagline{
    margin-top: 10px;
    color: var(--ink);
    opacity: .75;
    font-size: clamp(16px, 1.6vw, 20px);
}

.cta-row{
    margin-top: 16px;
    display: flex;
    gap: 12px;
    justify-content: center;
    flex-wrap: wrap;
}

.btn{
    display: inline-block;
    padding: 10px 16px;
    border-radius: 999px;
    border: 1px solid var(--line);
    background: #fff;
    color: var(--ink);
    font-weight: 600;
    text-decoration: none;
    transition: transform .15s ease, box-shadow .2s ease, background-color .2s ease;
}
.btn:hover{ transform: translateY(-1px); box-shadow: 0 10px 24px rgba(2,6,23,.10); }
.btn.primary{ background: #111827; color:#fff; border-color:#111827; }
.btn.primary:hover{ box-shadow: 0 12px 28px rgba(2,6,23,.15); }

.social{
    margin-top: 10px;
    display: flex; gap: 12px; justify-content: center;
    color: var(--muted);
    font-size: .95rem;
}
.social a{
    color: inherit; text-decoration: none; border-bottom: 1px dashed transparent;
}
.social a:hover{ border-bottom-color: currentColor; }

/* === Aurora text for #nameLine === */
:root{
    /* tweak these */
    --aurora-speed: 5.5s;      /* smaller = faster color change */
    --aurora-intensity: 0.40;  /* 0.30–0.55 looks good on white */
  }
  
  /* animated, multi-layer gradient clipped into text */
  .aurora-text{
    background:
      linear-gradient(120deg, #dc2626, #d97706, #059669, #374151, #7c3aed),
      linear-gradient(300deg,
        rgba(217,119,6,var(--aurora-intensity)),
        rgba(124,58,237,var(--aurora-intensity))),
      linear-gradient( 30deg,
        rgba(5,150,105,var(--aurora-intensity)),
        rgba(55,65,81,var(--aurora-intensity)));
    background-size: 300% 300%, 220% 220%, 220% 220%;
    background-position: 0% 50%, 100% 50%, 50% 0%;
  
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
  
    /* motion + subtle hue drift (no white introduced) */
    animation:
      auroraMove var(--aurora-speed) ease-in-out infinite alternate,
      hueCycle  calc(var(--aurora-speed) * 1.6) linear infinite;
  
    /* tuned for light page background */
    filter: saturate(1.15) contrast(1.05) hue-rotate(var(--hue,0deg));
  }
  
  /* only animate once the big line is revealed */
  .intro-line.big:not(.show) .aurora-text { animation-play-state: paused; }
  .intro-line.big.show .aurora-text       { animation-play-state: running; }
  
  /* smooth fade for the name (keep if not already present) */
  :root { --name-fade-dur: 1.2s; }
  #nameLine{
    display:inline-block;
    opacity:0;
    transform:translateY(6px);
    transition:
      opacity var(--name-fade-dur) cubic-bezier(.2,.7,0,1),
      transform var(--name-fade-dur) cubic-bezier(.2,.7,0,1);
  }
  .intro-line.big.show #nameLine{ opacity:1; transform:none; }
  /* stack everything so the key doesn’t shift when the wipe appears */
.intro-overlay > * { grid-area: 1 / 1; }

/* Stack the lock and the decode text vertically */
.intro-overlay .sq-wrap{
    display: flex;              /* override previous grid */
    flex-direction: column;
    align-items: center;
    gap: 12px;
  }
  
  /* The decoding word */
/* reserve space + hide until click */
.decode-text{
    font: 700 14px ui-monospace, SFMono-Regular, Menlo, Consolas, "Liberation Mono", monospace;
    letter-spacing: .32em;
    color: #fff;
    text-transform: uppercase;
    opacity: .9;
  
    /* key bits */
    min-height: 1.2em;   /* reserves one line height so layout doesn't jump */
    visibility: hidden;  /* hidden but still takes up space */
  }
  
  #musicViz{
    position: fixed;
    inset: 0;
    pointer-events: none;
    z-index: 0;
    opacity: .18;
    filter: blur(0.3px);
  }
  
  .audio-chip{
    position: fixed;
    left: 50%;
    bottom: clamp(20px, 4vh, 36px);
    transform: translateX(-50%);
    z-index: 10001; /* above everything else */
  }
  
  
  #audioToggle{
    appearance: none;
    border: 1px solid var(--line);
    background: #fff;
    color: var(--ink);
    padding: 10px 14px;
    border-radius: 999px;
    font: 600 14px/1 system-ui, -apple-system, Segoe UI, Roboto, sans-serif;
    box-shadow: 0 10px 20px rgba(2,6,23,.06);
    transition: box-shadow .2s ease, transform .15s ease;
  }
  #audioToggle:hover{ box-shadow: 0 12px 28px rgba(2,6,23,.10); }
  #audioToggle:active{ transform: translateY(1px); }
  #audioToggle[aria-pressed="true"]{ background: #111827; color: #fff; border-color: transparent; }
  
  /* Respect reduced-motion */
  @media (prefers-reduced-motion: reduce){
    #musicViz{ display:none !important; }
  }
  

/* fade-only lift — no vertical movement */
.intro-overlay .sq-wrap.lift { animation: exitUp .7s cubic-bezier(.16,1,.3,1) forwards; }
@keyframes exitUp { from { opacity:1; transform:translateY(0); } to { opacity:0; transform:translateY(0); } }

/* the wipe covers the whole overlay when revealing */
.intro-overlay .white-wipe { position:absolute; inset:0; background:#fff; transform:translateY(100%); z-index:3; }
.intro-overlay.revealing .white-wipe { transition: transform .7s cubic-bezier(.16,1,.3,1); transform: translateY(0%); }

  /* animations */
  @keyframes auroraMove{
    0%   { background-position:   0% 50%, 100% 50%, 50%   0%; }
    50%  { background-position:  60% 40%,   0% 60%,  60% 100%; }
    100% { background-position: 100% 50%,  40%  0%,   0%  50%; }
  }
  
  /* custom prop for hue drift (supported in modern browsers) */
  @property --hue { syntax: '<angle>'; inherits: false; initial-value: 0deg; }
  @keyframes hueCycle { to { --hue: 360deg; } }

  /* Role rotator (same size as .intro-line.small) */
/* Role rotator (same size as .intro-line.small) */
.role-rotator{
    position: relative;
    display: grid;           /* <-- let children overlap but still size the box */
    place-items: center;
    height: 1.4em;           /* reserves one line */
    overflow: hidden;
    color: var(--muted);
    margin-top: 6px;
    letter-spacing: .03em;
    min-width: 14ch;         /* optional: reserve width so it doesn't jump */
  }
  
  .role-rotator .item{
    grid-area: 1 / 1;        /* overlap items in the same cell */
    white-space: nowrap;
  }
  
  /* animations unchanged */
  @keyframes rrIn{
    from{ opacity:0; transform: translateY(10px) scale(.995); filter: blur(3px); }
    to  { opacity:1; transform: none;                 filter: blur(0); }
  }
  @keyframes rrOut{
    from{ opacity:1; transform: none;                 filter: blur(0); }
    to  { opacity:0; transform: translateY(-10px) scale(.995); filter: blur(3px); }
  }
  .role-rotator .item.in  { animation: rrIn 420ms cubic-bezier(.2,.7,0,1); }
  .role-rotator .item.out { animation: rrOut 420ms cubic-bezier(.2,.7,0,1) forwards; }
  